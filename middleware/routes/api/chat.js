require('dotenv').config();

const express = require('express');
const router = express.Router();

router.post('/', async (req, res) => {  // TODO: session, system prompt
    const { message } = req.body;

    if (!message) {
        res.status(400).json({ message: "Missing required fields."});
        return;
    }

    try {
        const systemPrompt = `
            You are a helpful chatbot on a portfolio website. Your primary purpose is to assist 
            visitors by providing information about the site's owner, their skills, projects, and experience. 
            Answer questions in a friendly and concise manner, making sure to showcase the owner's expertise and work.
            If you don't know the answer to a question, let the visitor know politely.

            The following is the info about the site owner:
            **Given Name**: Shushama
            **Last Name**: Tahsin
            **Description**: a student, studying for associate's degree in computer science at Langara College, interested in game development and full stack development
            **Skills**: JavaScript, React, Node.js, MongoDB, ASP.NET Core, MySQL, Tailwind CSS, AWS, Docker, Unity (2D)
            **Projects**:
            [
                {
                "name": "Purrfect Neighbors",
                "type": "Web",
                "description": "A community-driven app that connects pet owners for adoption, donation, and resource-sharing within their neighborhood.",
                "status": "Complete",
                "techStack": ["React", "Node.js", "Express", "GraphQL", "MySQL", "Redis", "Websocket", "Ant Design"],
                "github": "https://github.com/stahsin00/purrfect-neighbors",
                "link": "https://frontend.purrfect-neighbors-frontend.stahsin00.defang.app"
                },
                {
                "name": "Solara",
                "type": "Web",
                "description": "A productivity app that aims to gamify everyday tasks.",
                "status": "In Progress",
                "techStack": ["React", "CSS", "ASP.Net Core", "MySQL", "Redis", "Websocket"],
                "github": "https://github.com/stahsin00/Solara.git"
                },
                {
                "name": "Echo Lounge",
                "type": "Web",
                "description": "A game where you play as a bartender to android customers generated by ChatGPT and Stability AI APIs.",
                "status": "Complete",
                "techStack": ["React", "CSS", "Node.Js", "Express", "MongoDB"],
                "github": "https://github.com/stahsin00/echo-lounge.git",
                "link": "https://stahsin00-frontend--80.prod1a.defang.dev"
                },
                {
                "name": "Fluentify",
                "type": "Web",
                "description": "A language learning app that uses Google Translate API and ChatGPT API to generate stories and quizzes.",
                "status": "Complete",
                "techStack": ["React", "Tailwind"],
                "github": "https://github.com/Zanzigzan/CPSC-2350-group-project.git",
                "link": "https://fluent-ify.netlify.app/"
                },
                {
                "name": "Pixel Crawler",
                "type": "Game",
                "description": "A procedurally generated 2D platformer.",
                "status": "In Progress",
                "techStack": ["Unity"],
                "pixelated": "true",
                "github": "https://github.com/stahsin00/pixel-crawler-prototype"
                },
                {
                "name": "Saunter",
                "type": "Web",
                "description": "An endless scrolling image gallery website meant to imitate the feeling of taking a stroll around the world.",
                "status": "Inactive",
                "techStack": ["HTML", "CSS", "PHP", "MySQL"],
                },
                {
                "name": "PictureChain",
                "type": "Web",
                "description": "A party game that uses Dall-E's image generation to allow user's to guess the initial prompt.",
                "status": "Inactive",
                "techStack": ["React", "MUI"],
                "github": "https://github.com/lhacks-rsmm/picturechain-frontend.git"
                },
                {
                "name": "Cartographer",
                "type": "Game",
                "description": "World generation using perlin noise to create a variety of landscapes for players to explore and collect resources.",
                "status": "In Progress",
                "techStack": ["Unity"],
                "image": "cartographer.png"
                },
                {
                "name": "Rover",
                "type": "Game",
                "description": "2D metroidvania where the player is a robot that is exploring a new planet.",
                "status": "Inactive",
                "techStack": ["Unity"],
                "pixelated": "true"
                }
            ]
            
        `;

        const messages = [];

        messages.push({ role: 'system', content: systemPrompt });
        messages.push({ role: 'user', content: message });

        const response = await fetch('https://api.openai.com/v1/chat/completions', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                model: 'gpt-4o',
                messages: messages
            })
        });

        if (!response.ok) {
            const errorText = await response.text();
            throw new Error(`${response.status}: ${errorText}`);
        }

        const result = await response.json();
        res.status(200).json({message: result.choices[0].message.content})
    }
    catch (err) {
        res.status(500).json({message: err.message})
    }
});

module.exports = router;